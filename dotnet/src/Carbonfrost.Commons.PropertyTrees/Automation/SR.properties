#
# Copyright 2019 Carbonfrost Systems, Inc. (http://carbonfrost.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
BadAddChild=Cannot append child to instance of type ${parentType}.
BadSourceDirective=Invalid `source' directive: an invalid or unrecognized URI format.
BadTargetProviderDirective=Invalid `provider' directive: unknown or unresolved provider.
BadTargetTypeDirective=Invalid `type' directive: unknown or unresolved type.
BadTargetTypeDirectiveUnresolvable=Invalid `type' directive: couldn't resolve specified type or its dependencies.
BinderConversionError=Cannot parse text for the property `${property}' (${type}).
BinderMissingProperty=Member name `${propertyName}' could not be found for the type `${type}'.
BinderMissingPropertyNoType=Member name `${propertyName}' could not be found.
CannotAppendChild=Cannot append child nodes to this instance.
CannotDeleteRoot=Cannot delete the property tree root.
ConstructorRequired=A public instance constructor is required for the type: ${typeName}.
ConversionGenericMessage="An error occurred when converting the property value"
CouldNotBindGenericParameters=Could not determine the generic parameters for type ${type}.
CouldNotBindStreamingSource=Could not initialize an instance of type ${type} from a stream.
DuplicateProperty=A node with the specified name already exists: `${name}'.
DuplicatePropertyName=One or more property names have duplicates: ${names}
ExpectedClosingBrace=Expected ')' in function expression
FailedToLoadFromSource=Failed to load an instance from `${uri}'.
InvalidFactoryType=The specified type cannot be used as a property tree factory type: `${fullName}'.
LateBoundTypeMissing=The property for the late bound type must be specified.
LateBoundTypeNotFound=Specified required late-bound type could not be found: ${typeName}
LateBoundTypeNotFoundError=Could not load the late bound type or its dependencies.
MergeNamedMustMatch=Nodes must have same qualified names to be merged.
NoAddMethodSupported=Type `${type}' cannot be initialized like a collection because no best `Add' method exists.
NotAcceptiblePropertyType=The given property type is not one of the acceptible property types.
NoTargetProviderMatches=No provider of type `${componentType}' matches the specified criteria.
NotFromThisClient=The specified property tree is not connected to this client.
ProblemAccessingProperty=An error occurred when invoking property getter or indexer `${name}' (type: ${hint}).
PropertyTreeMetaObjectComponentNull=Component or component type or both must be specified.
ReaderNotMoved=Reader is currently positioned before the first node of the document.
ReaderWrongPosition=Expected reader to be positioned on a `${nodeKind}' node (actual position: `${actualNodeKind}').
RequiredPropertiesMissing=One or more required properties must be specified: ${names} (${hint})
TemplateTypeConstructorMustBeNiladic=The template type must have a public, default constructor: ${type}
UnableToMatchTypeNameAmbiguous=The name ${name} is ambiguous: ${list}
UnableToMatchTypeNameZero=No type could be loaded that matches the name ${name}.
WouldCreateMalformedDocument=Operation would lead to an invalid document.
WouldCreateMalformedDocumentRootRequired=Operation would lead to an malformed document.  A tree is required.
WriterIncorrectState=Operation is not valid for the current writer state, `${state}'.
WriterOnlyPropertyTreesNamespace=Tree must specify the property trees metadata namespace when used within a property.
WriterPropertyOrTreeExists=Specified property or tree name would create a malformed document because the given name has already been written: `${propertyName}'.
CannotConvertFromString=Cannot convert from a string to the specified type `${destinationType}'.
CannotConvertToString=Cannot convert from the specified instance to a string.
